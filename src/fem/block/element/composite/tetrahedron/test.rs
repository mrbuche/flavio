use crate::fem::block::
{
    element::composite::test::test_composite_element,
    test::test_finite_element_block
};
use super::*;

const D: usize = 63;
const E: usize = 24;

fn get_connectivity() -> Connectivity<E, N>
{
    [
        [13, 12,  8,  1, 50, 51, 52, 29, 43, 31],
        [10,  3,  0,  8, 47, 22, 49, 53, 32, 30],
        [11, 10,  8,  3, 54, 53, 55, 40, 47, 32],
        [12, 11,  8,  2, 56, 55, 51, 44, 39, 33],
        [11,  2,  3,  8, 39, 15, 40, 55, 33, 32],
        [12,  2,  8,  1, 44, 33, 51, 43, 21, 31],
        [13, 10,  5,  0, 57, 48, 26, 27, 49, 14],
        [13, 11, 10,  8, 58, 54, 57, 52, 55, 53],
        [10,  6,  9,  5, 46, 36, 59, 48, 17, 34],
        [12,  7,  4,  9, 45, 20, 42, 60, 37, 35],
        [12, 11,  7,  9, 56, 38, 45, 60, 61, 37],
        [11,  7,  9,  6, 38, 37, 61, 41, 19, 36],
        [13,  1,  8,  0, 29, 31, 52, 27, 25, 30],
        [13,  9,  4,  5, 62, 35, 28, 26, 34, 23],
        [13, 12,  1,  4, 50, 43, 29, 28, 42, 18],
        [11, 10,  6,  9, 54, 46, 41, 61, 59, 36],
        [11, 10,  3,  6, 54, 47, 40, 41, 46, 16],
        [12, 11,  2,  7, 56, 39, 44, 45, 38, 24],
        [13, 11,  9, 10, 58, 61, 62, 57, 54, 59],
        [13, 12,  4,  9, 50, 42, 28, 62, 60, 35],
        [13, 10,  0,  8, 57, 49, 27, 52, 53, 30],
        [13, 10,  9,  5, 57, 59, 62, 26, 48, 34],
        [13, 12, 11,  8, 50, 56, 58, 52, 51, 55],
        [13, 12,  9, 11, 50, 60, 62, 58, 56, 61]
    ]
}

fn get_coordinates_block() -> NodalCoordinates<D>
{
    NodalCoordinates::new([
        [ 0.51718592, -0.46059588,  0.47571719],
        [ 0.48826659,  0.50442136,  0.50889120],
        [-0.49916182,  0.49594188,  0.54640632],
        [-0.51210289, -0.47080050,  0.47993361],
        [ 0.52091938,  0.45609340, -0.52539293],
        [ 0.54733360, -0.53620515, -0.51137792],
        [-0.45954353, -0.46407006, -0.52847634],
        [-0.47948325,  0.52952112, -0.53168962],
        [ 0.04054862, -0.01079351,  0.48718468],
        [ 0.04258008,  0.00782977, -0.51732122],
        [ 0.00769760, -0.46452440,  0.00606829],
        [-0.50410678,  0.00563055,  0.04047826],
        [ 0.01993100,  0.48204185, -0.00212823],
        [ 0.48408419, -0.04728833, -0.02402109],
        [ 0.28112444, -0.20719968,  0.53349899],
        [ 0.26567264,  0.25449413,  0.49277638],
        [-0.29207567, -0.29254315,  0.49515875],
        [-0.29775397,  0.25277383,  0.51930239],
        [ 0.46757155,  0.04214361,  0.51693543],
        [-0.47454465,  0.01786206,  0.51836027],
        [ 0.00493240, -0.52210813,  0.50989801],
        [ 0.01384524,  0.54523594,  0.47932116],
        [ 0.25080451, -0.28040803, -0.45203151],
        [ 0.20101859,  0.24103422, -0.51222949],
        [-0.29496415, -0.2685464 , -0.46048535],
        [-0.25030952,  0.22119042, -0.46615153],
        [ 0.47597723, -0.04462266, -0.46907858],
        [-0.03537684, -0.45950183, -0.54389717],
        [-0.45607099,  0.00171608, -0.53515171],
        [ 0.04867776,  0.45809848, -0.48892530],
        [-0.53527598,  0.29382250, -0.21289709],
        [-0.48827563,  0.22151031,  0.25317767],
        [-0.54839041, -0.28097601,  0.26956788],
        [-0.51489203, -0.23669267, -0.26927063],
        [-0.48975483,  0.54626959,  0.00691276],
        [-0.51483814, -0.48428839,  0.02462219],
        [ 0.20503714,  0.46610816, -0.27393681],
        [ 0.29098003,  0.48303968,  0.28618690],
        [-0.23086458,  0.54013457,  0.23568182],
        [-0.22501598,  0.47243218, -0.23370983],
        [ 0.50651968,  0.47031812,  0.01065833],
        [-0.20190435, -0.47985108, -0.29291157],
        [-0.23860864, -0.48444253,  0.21156479],
        [ 0.27123339, -0.51459318, -0.28606458],
        [ 0.22393730, -0.49978790,  0.28515639],
        [ 0.48333816, -0.52856583, -0.03082954],
        [ 0.53334985, -0.25187804, -0.29984313],
        [ 0.50597791, -0.27415307,  0.24299749],
        [ 0.47306675,  0.25140438, -0.22934298],
        [ 0.54359146,  0.22978600,  0.28550058],
        [ 0.26001908,  0.25673523,  0.00218440],
        [ 0.02551660,  0.21676461,  0.23995067],
        [ 0.22149275,  0.27431853,  0.20129732],
        [ 0.02493968, -0.24660921,  0.27404108],
        [-0.28010581, -0.25808080, -0.00361030],
        [-0.25170336, -0.22610369,  0.25708415],
        [-0.21536707,  0.23126954,  0.02802451],
        [ 0.25947812, -0.27846410, -0.03882205],
        [-0.01981322, -0.01228204, -0.00230720],
        [-0.03004919, -0.21492233, -0.27059042],
        [-0.03177253,  0.24376528, -0.22373983],
        [-0.23573415, -0.21318797, -0.27180356],
        [ 0.22824132,  0.28172924, -0.21377475]
    ])
}

fn get_reference_coordinates() -> ReferenceNodalCoordinates<N>
{
    ReferenceNodalCoordinates::new([
        [0.0, 0.0, 0.0],
        [1.0, 0.0, 0.0],
        [0.0, 1.0, 0.0],
        [0.0, 0.0, 1.0],
        [0.5, 0.0, 0.0],
        [0.5, 0.5, 0.0],
        [0.0, 0.0, 0.0],
        [0.0, 0.0, 0.5],
        [0.5, 0.0, 0.5],
        [0.0, 0.5, 0.5]
    ])
}

fn get_reference_coordinates_block() -> ReferenceNodalCoordinates<D>
{
    ReferenceNodalCoordinates::new([
        [ 0.50, -0.50,  0.50],
        [ 0.50,  0.50,  0.50],
        [-0.50,  0.50,  0.50],
        [-0.50, -0.50,  0.50],
        [ 0.50,  0.50, -0.50],
        [ 0.50, -0.50, -0.50],
        [-0.50, -0.50, -0.50],
        [-0.50,  0.50, -0.50],
        [ 0.00,  0.00,  0.50],
        [ 0.00,  0.00, -0.50],
        [ 0.00, -0.50,  0.00],
        [-0.50,  0.00,  0.00],
        [ 0.00,  0.50,  0.00],
        [ 0.50,  0.00,  0.00],
        [ 0.25, -0.25,  0.50],
        [ 0.25,  0.25,  0.50],
        [-0.25, -0.25,  0.50],
        [-0.25,  0.25,  0.50],
        [ 0.50,  0.00,  0.50],
        [-0.50,  0.00,  0.50],
        [ 0.00, -0.50,  0.50],
        [ 0.00,  0.50,  0.50],
        [ 0.25, -0.25, -0.50],
        [ 0.25,  0.25, -0.50],
        [-0.25, -0.25, -0.50],
        [-0.25,  0.25, -0.50],
        [ 0.50,  0.00, -0.50],
        [ 0.00, -0.50, -0.50],
        [-0.50,  0.00, -0.50],
        [ 0.00,  0.50, -0.50],
        [-0.50,  0.25, -0.25],
        [-0.50,  0.25,  0.25],
        [-0.50, -0.25,  0.25],
        [-0.50, -0.25, -0.25],
        [-0.50,  0.50,  0.00],
        [-0.50, -0.50,  0.00],
        [ 0.25,  0.50, -0.25],
        [ 0.25,  0.50,  0.25],
        [-0.25,  0.50,  0.25],
        [-0.25,  0.50, -0.25],
        [ 0.50,  0.50,  0.00],
        [-0.25, -0.50, -0.25],
        [-0.25, -0.50,  0.25],
        [ 0.25, -0.50, -0.25],
        [ 0.25, -0.50,  0.25],
        [ 0.50, -0.50,  0.00],
        [ 0.50, -0.25, -0.25],
        [ 0.50, -0.25,  0.25],
        [ 0.50,  0.25, -0.25],
        [ 0.50,  0.25,  0.25],
        [ 0.25,  0.25,  0.00],
        [ 0.00,  0.25,  0.25],
        [ 0.25,  0.25,  0.25],
        [ 0.00, -0.25,  0.25],
        [-0.25, -0.25,  0.00],
        [-0.25, -0.25,  0.25],
        [-0.25,  0.25,  0.00],
        [ 0.25, -0.25,  0.00],
        [ 0.00,  0.00,  0.00],
        [ 0.00, -0.25, -0.25],
        [ 0.00,  0.25, -0.25],
        [-0.25, -0.25, -0.25],
        [ 0.25,  0.25, -0.25]
    ])
}

fn get_velocities_block() -> NodalVelocities<D>
{
    NodalVelocities::new([
        [0.01645368, 0.05260200, 0.02408546],
        [0.05989263, 0.04132774, 0.04300265],
        [0.02602390, 0.02693895, 0.03945940],
        [0.07440375, 0.00484496, 0.05874542],
        [0.02820279, 0.01870134, 0.09465933],
        [0.03318801, 0.07025479, 0.09383862],
        [0.08623883, 0.09844547, 0.05975890],
        [0.06952362, 0.04190933, 0.05150422],
        [0.09431730, 0.02404220, 0.09812329],
        [0.05910890, 0.00860090, 0.07284891],
        [0.02482251, 0.02342835, 0.07593004],
        [0.07038800, 0.01474768, 0.06413451],
        [0.07406117, 0.02935939, 0.06263831],
        [0.04711463, 0.04249641, 0.05325871],
        [0.01486861, 0.02546480, 0.07316282],
        [0.00839487, 0.02109609, 0.07796772],
        [0.07043966, 0.09360524, 0.00796862],
        [0.09909761, 0.08710223, 0.07658513],
        [0.00902277, 0.07974163, 0.04240368],
        [0.03773506, 0.00388103, 0.04298711],
        [0.09130318, 0.06263284, 0.09173384],
        [0.00583300, 0.09219982, 0.05370069],
        [0.09592706, 0.01306129, 0.09007265],
        [0.02970818, 0.06952542, 0.06396818],
        [0.09559561, 0.04486288, 0.06636934],
        [0.05956468, 0.01787264, 0.07422170],
        [0.01386674, 0.04029826, 0.05606451],
        [0.05168296, 0.09973437, 0.05587671],
        [0.02266525, 0.09297348, 0.01079638],
        [0.05972763, 0.07918433, 0.06572725],
        [0.07916355, 0.04454104, 0.04270171],
        [0.08469643, 0.01393464, 0.01487269],
        [0.08905577, 0.03629476, 0.03149722],
        [0.07862019, 0.00210583, 0.00764262],
        [0.08332993, 0.09667342, 0.07310605],
        [0.09503323, 0.08742251, 0.08664640],
        [0.04671676, 0.04648119, 0.08693600],
        [0.00161271, 0.02589068, 0.00673886],
        [0.02044932, 0.06430369, 0.05993971],
        [0.01079650, 0.05667055, 0.07754711],
        [0.09248633, 0.03411575, 0.00016645],
        [0.03574929, 0.00496142, 0.04292888],
        [0.04080366, 0.04176952, 0.06683615],
        [0.09804567, 0.08265190, 0.06833720],
        [0.09500097, 0.00270521, 0.06353198],
        [0.05505951, 0.04209880, 0.06234453],
        [0.07234887, 0.03244722, 0.01397107],
        [0.04245824, 0.04075262, 0.02117675],
        [0.08218758, 0.04450099, 0.00778561],
        [0.05395809, 0.04086912, 0.05581984],
        [0.09716753, 0.08024291, 0.09005300],
        [0.03055366, 0.06738789, 0.06198184],
        [0.00386355, 0.02354646, 0.07845684],
        [0.06684399, 0.02804617, 0.06069856],
        [0.09103697, 0.08651795, 0.00222457],
        [0.09486071, 0.07721337, 0.06873251],
        [0.03660572, 0.04867734, 0.09364838],
        [0.09652423, 0.02226845, 0.01157782],
        [0.09001205, 0.02880633, 0.04395438],
        [0.08974547, 0.03723648, 0.08390174],
        [0.00343278, 0.05804344, 0.01962975],
        [0.08726189, 0.01399156, 0.08509634],
        [0.04116874, 0.01871917, 0.02674474]
    ])
}

test_composite_element!(Tetrahedron);
test_finite_element_block!(Tetrahedron);